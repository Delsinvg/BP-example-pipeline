# This is a basic workflow to help you get started with Actions

name: example-pipeline

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      site: 'https://codedor.be'
    steps:
      - name: Check page title & description
        uses: Delsinvg/check-page-title-and-description-action@1.0
        id: check1
        with:
          # url of the site to check
          site: ${{env.site}}
      - name: Get the title and description
        run: echo "The title is ${{ steps.check1.outputs.title }} & the description is ${{ steps.check1.outputs.description }}"
        
      - name: Check hreflang tag
        uses: Delsinvg/check-hreflang-action@1.0
        id: check2
        with:
          # url of the site to check
          site: ${{env.site}}
      - name: Get the hreflang url
        run: echo "The website is available on ${{ steps.check2.outputs.hreflang }}"
        
      - name: Check favicon
        uses: Delsinvg/check-favicon-action@1.0
        id: check3
        with:
          # url of the site to check
          site: ${{env.site}}
      - name: Get the favicon url
        run: echo "The favicon is available on ${{ steps.check3.outputs.favicon }}"
        
      - name: Check Robots.txt
        uses: Delsinvg/check-robots.txt-action@1.0
        id: check4
        with:
          # url of the site to check
          site: ${{env.site}}
      - name: Get the url of the robotstxt
        run: echo "This is the robots.txt ${{ steps.check4.outputs.robots }}"
        
      - name: Check mobile user-friendliness
        uses: Delsinvg/check-mobile-friendly-action@1.0
        id: check5
        with:
              # url of the site to check
          site: ${{env.site}}/
              # The Google API key
          key: ${{ secrets.MOBILE_FRIENDLY_API_KEY}}
              # Return Base64 to convert to an image
          image: false        
